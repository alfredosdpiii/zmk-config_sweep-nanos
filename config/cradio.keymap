#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define HRM 1
#define NUM 2
#define NAV 3
#define SYM 4
#define FUN 5
#define MOU 6
#define AOE 7
#define AGS 8
#define ABS 9
#define HYPER LG(LA(LS(LCTRL)))

/ {
    combos {
        compatible = "zmk,combos";

        left_hand_esc_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <0 10>;
            require-prior-idle-ms = <200>;
        };

        left_hand_tab {
            bindings = <&kp TAB>;
            key-positions = <1 11>;
            require-prior-idle-ms = <200>;
        };

        left_hand_enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <3 13>;
            require-prior-idle-ms = <200>;
        };

        left_hand_backspace {
            bindings = <&kp BSPC>;
            key-positions = <4 14>;
            require-prior-idle-ms = <200>;
        };

        toggle_mouse_layer_combo {
            key-positions = <23 30>;
            bindings = <&tog MOU>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_with_home_row_mods {
            bindings = <
&kp Q       &kp W           &kp E        &kp R             &kp T      &kp Y    &kp U         &kp I        &kp O           &kp P
&mt LGUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G      &kp H    &mt LSHIFT J  &mt LCTRL K  &mt LEFT_ALT L  &mt LEFT_WIN SEMICOLON
&kp Z       &kp X           &kp C        &kp V             &kp B      &kp N    &kp M         &kp COMMA    &kp DOT         &kp SQT
                                         &kp SPACE         &mo HRM    &mo NUM  &kp ENTER
            >;
        };

        symbol_row {
            bindings = <
&kp N1     &kp N2    &kp N3    &kp N4    &kp N5      &kp N6     &kp N7     &kp N8     &kp N9    &kp BSPC
&kp TILDE  &kp N0    &kp LPAR  &kp LBKT  &kp LBRC    &kp MINUS  &kp UNDER  &kp BSLH   &kp PIPE  &kp SEMI
&kp GRAVE  &kp FSLH  &kp RPAR  &kp RBKT  &kp RBRC    &kp PLUS   &kp EQUAL  &kp COMMA  &kp DOT   &kp FSLH
                               &trans    &trans      &kp LSHFT  &kp TAB
            >;
        };

        numpad {
            bindings = <
&kp ESC       &none         &none         &none         &caps_word      &none     &none      &none      &none      &kp BSPC
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none
&bt BT_CLR    &bt BT_CLR    &none         &none         &none           &none     &kp PG_DN  &kp PG_UP  &kp DOT    &kp COLON
                                          &mkp LCLK     &kp TAB         &trans    &trans
            >;
        };

        mouse {
            bindings = <
&kp ESC    &kp LC(UP)  &kp LC(TAB)  &kp LC(TAB)  &kp BSPC     &msc SCRL_DOWN  &msc SCRL_RIGHT  &mmv MOVE_UP    &msc SCRL_LEFT   &kp BSPC
&kp LCTRL  &kp LALT    &kp LSHFT    &kp LGUI     &kp ENTER    &msc SCRL_UP    &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp ENTER
&kp LG(Z)  &kp LG(X)   &kp LG(C)    &kp LG(V)    &kp SPACE    &none           &none            &kp LC(LEFT)    &kp LC(RIGHT)    &mkp RCLK
                                    &tog MOU     &tog MOU     &mkp LCLK       &mkp RCLK
            >;
        };
    };
};
