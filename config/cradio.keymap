#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define HRM 1
#define NUM 2
#define NAV 3
#define SYM 4
#define FUN 5
#define MOU 6
#define AOE 7
#define AGS 8
#define ABS 9
#define HYPER LG(LA(LS(LCTRL)))

&sk {
    quick-release;
    release-after-ms = <86400000>;
};

&mt { flavor = "balanced"; };

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE K_CANCEL LSHFT SQT CARET TILDE GRAVE>;
    /delete-property/ ignore-modifiers;
};

/ {
    combos {
        compatible = "zmk,combos";

        left_hand_esc_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <0 10>;
            require-prior-idle-ms = <200>;
        };

        left_hand_tab {
            bindings = <&kp TAB>;
            key-positions = <1 11>;
            require-prior-idle-ms = <200>;
        };

        left_hand_enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <3 13>;
            require-prior-idle-ms = <200>;
        };

        left_hand_backspace {
            bindings = <&kp BSPC>;
            key-positions = <4 14>;
            require-prior-idle-ms = <200>;
        };

        toggle_mouse_layer_combo {
            key-positions = <23 30>;
            bindings = <&tog MOU>;
        };
    };

    behaviors {
        ml: home-row-mods-left {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <30 31 32 33 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
            hold-trigger-on-release;
        };

        mr: home-row-mods-right {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <30 31 32 33 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
            hold-trigger-on-release;
        };

        blt: balanced_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        playnp: play_next_previous_media {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        shft_cw: shft_cw {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RSHFT>, <&caps_word>;
        };

        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt RGUI>, <&kp TAB>, <&kt RGUI>;
            ignored-key-positions = <7 9 16 17 18 19 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_with_home_row_mods {
            bindings = <
&kp Q       &kp W       &kp E        &kp R             &kp T    &kp Y  &kp U             &kp I        &kp O           &kp P
&ml LGUI A  &ml LALT S  &ml LCTRL D  &ml LSHFT F       &kp G    &kp H  &mr LSHFT J       &mr LCTRL K  &mr LALT L      &mr LGUI SEMI
&kp Z       &kp X       &kp C        &kp V             &kp B    &kp N  &kp M             &kp COMMA    &kp DOT         &kp SQT
                                     &kp SPACE          &mo HRM  &mo NUM  &kp ENTER
            >;
        };

        symbol_row {
            bindings = <
&kp N1     &kp N2      &kp N3    &kp N4    &kp N5     &kp N6    &kp N7     &kp N8     &kp N9   &kp BSPC
&kp TILDE  &kp N0      &kp LPAR  &kp LBKT  &kp LBRC   &kp MINUS &kp UNDER  &kp BSLH   &kp PIPE &kp SEMI
&kp GRAVE  &kp LS(FSLH) &kp RPAR  &kp RBKT  &kp RBRC   &kp PLUS  &kp EQUAL  &kp COMMA  &kp DOT  &kp FSLH
                                 &trans    &trans     &kp LSHFT &kp TAB
            >;
        };

        numpad {
            bindings = <
&kp ESC      &none         &none        &none        &caps_word    &none     &none         &none       &none     &kp BSPC
&bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp LEFT  &kp DOWN      &kp UP      &kp RIGHT &none
&bt BT_CLR   &bt BT_CLR_ALL &none        &none        &none        &none     &kp PG_DN     &kp PG_UP   &kp DOT   &kp COLON
                                        &mkp MB1     &kp TAB      &trans    &trans
            >;
        };

        mouse {
            bindings = <
&kp ESC     &kp LC(UP)    &kp LS(LC(TAB)) &kp LC(TAB)  &kp BSPC   &msc SCRL_DOWN  &msc SCRL_RIGHT &mmv MOVE_UP    &msc SCRL_LEFT  &kp BSPC
&kp LCTRL   &kp LALT      &kp LSHFT       &kp LGUI     &kp ENTER  &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT &kp ENTER
&kp LG(Z)   &kp LG(X)     &kp LG(C)       &kp LG(V)    &kp SPACE  &kp F18         &none           &kp LC(LEFT)    &kp LC(RIGHT)   &mkp MB3
                                          &tog MOU     &tog MOU   &mkp MB1        &mkp MB2
            >;
        };
    };
};
