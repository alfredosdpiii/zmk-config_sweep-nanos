#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

// Removed macros as DTS does not support #define directives

#define DEF 0
#define HRM 1
#define NUM 2
#define MOU 6

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        left_hand_esc_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <0 10>;
            require-prior-idle-ms = <200>;
        };
        left_hand_tab {
            bindings = <&kp TAB>;
            key-positions = <1 11>;
            require-prior-idle-ms = <200>;
        };
        left_hand_enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <3 13>;
            require-prior-idle-ms = <200>;
        };
        left_hand_backspace {
            bindings = <&kp BSPC>;
            key-positions = <4 14>;
            require-prior-idle-ms = <200>;
        };
        toggle_mouse_layer_combo {
            key-positions = <23 30>;
            bindings = <&tog 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            // ╭──────────┬──────────┬──────────┬──────────┬──────────╮    ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            // │    Q     │    W     │    E     │    R     │    T     │    │    Y     │    U     │    I     │    O     │    P     │
                &kp Q       &kp W       &kp E       &kp R       &kp T          &kp Y       &kp U       &kp I       &kp O       &kp P
            // ├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
            // │    A     │    S     │    D     │    F     │    G     │    │    H     │    J     │    K     │    L     │   ; :    │
                &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHIFT F  &kp G          &kp H     &mt RSHIFT J  &mt RCTRL K  &mt RALT L  &mt RGUI SEMI
            // ├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
            // │    Z     │    X     │    C     │    V     │    B     │    │    N     │    M     │   , <    │   . >    │   ' "    │
                &kp Z       &kp X       &kp C       &kp V       &kp B          &kp N       &kp M       &kp COMMA   &kp DOT     &kp SQT
            // ╰──────────┴──────────┴──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                 &kp SPACE  &mo 1          &mo 2      &kp ENTER
            //                                   ╰──────────┴──────────╯    ╰──────────┴──────────╯
            >;
        };

        symbol_row {
            bindings = <
            // ╭──────────┬──────────┬──────────┬──────────┬──────────╮    ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            // │    1     │    2     │    3     │    4     │    5     │    │    6     │    7     │    8     │    9     │   BSPC   │
                &kp N1      &kp N2      &kp N3      &kp N4      &kp N5         &kp N6      &kp N7      &kp N8      &kp N9      &kp BSPC
            // ├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
            // │    ~     │    0     │    (     │    [     │    {     │    │    -     │    _     │    \     │    |     │    ;     │
                &kp TILDE   &kp N0      &kp LPAR    &kp LBKT    &kp LBRC       &kp MINUS   &kp UNDER   &kp BSLH    &kp PIPE    &kp SEMI
            // ├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
            // │    `     │    /     │    )     │    ]     │    }     │    │    +     │    =     │    ,     │    .     │    /     │
                &kp GRAVE   &kp FSLH    &kp RPAR    &kp RBKT    &kp RBRC       &kp PLUS    &kp EQUAL   &kp COMMA   &kp DOT     &kp FSLH
            // ╰──────────┴──────────┴──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                  &trans     &trans         &kp LSHIFT  &kp TAB
            //                                    ╰──────────┴──────────╯    ╰──────────┴──────────╯
            >;
        };

        numpad {
            bindings = <
            // ╭──────────┬──────────┬──────────┬──────────┬──────────╮    ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            // │   ESC    │          │          │          │ CAPSLOCK │    │          │          │          │          │   BSPC   │
                &kp ESC     &none       &none       &none       &kp CAPS       &none       &none       &none       &none       &kp BSPC
            // ├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
            // │ BT_SEL 0 │ BT_SEL 1 │ BT_SEL 2 │ BT_SEL 3 │ BT_SEL 4 │    │   LEFT   │   DOWN   │    UP    │  RIGHT   │          │
                &bt BT_SEL_0 &bt BT_SEL_1 &bt BT_SEL_2 &bt BT_SEL_3 &bt BT_SEL_4    &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &none
            // ├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
            // │  BT_CLR  │  BT_CLR  │          │          │          │    │          │  PG_DN   │  PG_UP   │    .     │    :     │
                &bt BT_CLR   &bt BT_CLR   &none       &none       &none          &none       &kp PG_DN   &kp PG_UP   &kp DOT     &kp COLON
            // ╰──────────┴──────────┴──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                  &mkp LCLK  &kp TAB        &trans     &trans
            //                                    ╰──────────┴──────────╯    ╰──────────┴──────────╯
            >;
        };

        mouse {
            bindings = <
            // ╭──────────┬──────────┬──────────┬──────────┬──────────╮    ╭──────────┬──────────┬──────────┬──────────┬──────────╮
            // │   ESC    │  LC(UP)  │ LC(TAB)  │ LC(TAB)  │   BSPC   │    │ SCRL_DN  │ SCRL_RT  │ MOVE_UP  │ SCRL_LT  │   BSPC   │
                &kp ESC     &kp LC(UP) &kp LC(TAB) &kp LC(TAB) &kp BSPC   &msc SCRL_DN &msc SCRL_RT &mmv MOVE_UP &msc SCRL_LT &kp BSPC
            // ├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
            // │  LCTRL   │  LALT    │ LSHIFT   │  LGUI    │  ENTER   │    │ SCRL_UP  │ MOVE_LT  │ MOVE_DN  │ MOVE_RT  │  ENTER   │
                &kp LCTRL   &kp LALT   &kp LSHIFT  &kp LGUI    &kp ENTER   &msc SCRL_UP &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp ENTER
            // ├──────────┼──────────┼──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┼──────────┼──────────┤
            // │  LG(Z)   │  LG(X)   │ LG(C)    │  LG(V)   │  SPACE   │    │          │          │ LC(LEFT) │ LC(RIGHT)│  RCLICK  │
                &kp LG(Z)   &kp LG(X)  &kp LG(C)   &kp LG(V)  &kp SPACE   &none        &none        &kp LC(LEFT) &kp LC(RIGHT) &mkp RCLK
            // ╰──────────┴──────────┴──────────┼──────────┼──────────┤    ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                  &tog 6     &tog 6         &mkp LCLK  &mkp RCLK
            //                                    ╰──────────┴──────────╯    ╰──────────┴──────────╯
            >;
        };
    };
};
